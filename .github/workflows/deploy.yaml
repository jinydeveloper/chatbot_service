name: Deploy Streamlit App to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies (CI validation only)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests (optional)
      run: |
        # pytest tests/ --verbose
        echo "Tests would run here"
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script: |
          # 프로젝트 디렉토리로 이동
          cd /home/ubuntu/chatbot_service || exit 1
          
          # Git repository 업데이트
          git pull origin main
          
          # .streamlit/secrets.toml 생성
          mkdir -p /home/ubuntu/chatbot_service/.streamlit
          cat <<EOF > /home/ubuntu/chatbot_service/.streamlit/secrets.toml
          [aws]
          AWS_ACCESS_KEY_ID = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION = "${{ secrets.AWS_DEFAULT_REGION }}"
          EOF

          # 가상환경 생성/활성화
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          
          # 의존성 업데이트
          pip install -r requirements.txt

          # systemd 서비스 재시작
          sudo systemctl daemon-reload
          sudo systemctl restart streamlit.service
          
          # 서비스 상태 확인
          sleep 5
          if systemctl is-active --quiet streamlit; then
            echo "Streamlit app deployed successfully"
          else
            echo "Streamlit app failed to start"
            sudo journalctl -u streamlit --no-pager -n 20
            exit 1
          fi

          echo ">>> 다른 서버로 코드 동기화 시작"
          rsync -avz --delete /home/ubuntu/chatbot_service ubuntu@${{ secrets.EC2_SUB_HOST_1 }}:/home/ubuntu/chatbot_service

          echo ">>> 다른 서버 서비스 재시작"
          ssh ubuntu@${{ secrets.EC2_SUB_HOST_1 }} "sudo systemctl restart streamlit.service"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "Deployment successful!"
        else
          echo "Deployment failed!"
        fi
